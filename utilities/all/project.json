{
  "name": "all",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "utilities/all/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "nx:noop",
      "inputs": [],
      "outputs": [],
      "dependsOn": ["generate-doc-references", "^build", "generate-examples"]
    },
    "build:styles": {
      "executor": "nx:noop",
      "dependsOn": ["^build:styles"]
    },
    "lint": {
      "executor": "nx:noop",
      "inputs": [
        {
          "externalDependencies": ["npm:typescript"]
        }
      ],
      "dependsOn": ["^lint"],
      "configurations": {
        "fix": {}
      }
    },
    "test": {
      "executor": "nx:noop",
      "inputs": [
        {
          "externalDependencies": ["npm:typescript"]
        }
      ],
      "dependsOn": ["^test"],
      "configurations": {
        "update": {}
      }
    },
    "pack": {
      "executor": "nx:noop",
      "inputs": [],
      "outputs": [],
      "dependsOn": ["^pack"],
      "configurations": {
        "production": {}
      }
    },
    "pack:extract": {
      "executor": "nx:noop",
      "inputs": [],
      "outputs": [],
      "dependsOn": ["^pack:extract"],
      "configurations": {
        "production": {}
      }
    },
    "pack:verify": {
      "executor": "nx:noop",
      "inputs": [],
      "outputs": [],
      "dependsOn": ["^pack:verify"],
      "configurations": {
        "production": {},
        "archive": {}
      }
    },
    "build:core:modules": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["nx run-many -t build --projects=tag:module --exclude=tag:framework"]
      },
      "cache": true
    },
    "build:core:packages": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["nx run-many -t build --projects=tag:package --exclude=tag:framework"]
      },
      "cache": true
    },
    "build:core": {
      "executor": "nx:noop",
      "dependsOn": ["build:modules", "build:packages"],
      "inputs": [],
      "outputs": []
    },
    "test:modules": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["nx run-many -t test --projects=tag:module --exclude=tag:framework"]
      },
      "cache": true
    },
    "dev:setup": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": [
          "node scripts/buildTime.mjs start",
          "nx run-many -t build --projects=tag:module --exclude=tag:framework",
          "nx run all:generate-doc-references",
          "if (test \"${BUILD_FWS}\" != \"0\") ; then nx run-many -t build -p @ag-grid-community/angular,@ag-grid-community/react,@ag-grid-community/vue3 --parallel=5; fi",
          "if (test \"${BUILD_PACKAGES}\" != \"0\") ; then nx run-many -t build --projects=tag:package --exclude=tag:framework; fi",
          "if (test \"${BUILD_PACKAGES}\" != \"0\" && test \"${BUILD_FWS}\" != \"0\") ; then nx run-many -t build --projects=tag:package:framework; fi",
          "if (test \"${BUILD_BATCH}\" != \"0\") ; then nx generate-examples --batch; fi"
        ]
      }
    },
    "dev": {
      "executor": "nx:run-commands",
      "dependsOn": ["dev:setup"],
      "inputs": [],
      "options": {
        "parallel": true,
        "commands": [
          "while true ; do nx watch -p @ag-grid-community/client-side-row-model,@ag-grid-community/core,@ag-grid-community/csv-export,@ag-grid-community/infinite-row-model,@ag-grid-enterprise/advanced-filter,@ag-grid-enterprise/charts,@ag-grid-enterprise/charts-enterprise,@ag-grid-enterprise/clipboard,@ag-grid-enterprise/column-tool-panel,@ag-grid-enterprise/core,@ag-grid-enterprise/excel-export,@ag-grid-enterprise/filter-tool-panel,@ag-grid-enterprise/master-detail,@ag-grid-enterprise/menu,@ag-grid-enterprise/multi-filter,@ag-grid-enterprise/range-selection,@ag-grid-enterprise/rich-select,@ag-grid-enterprise/row-grouping,@ag-grid-enterprise/server-side-row-model,@ag-grid-enterprise/set-filter,@ag-grid-enterprise/side-bar,@ag-grid-enterprise/sparklines,@ag-grid-enterprise/status-bar,@ag-grid-enterprise/viewport-row-model,@ag-grid-community/styles -- {projectRoot}/dev.sh \\${NX_PROJECT_NAME} ; done",
          "while (test \"${BUILD_FWS}\" == \"1\") ; do nx watch -p @ag-grid-community/angular,@ag-grid-community/react,@ag-grid-community/vue3 -- nx run \\${NX_PROJECT_NAME}:build ; done",
          "while (test \"${BUILD_PACKAGES}\" == \"1\") ; do nx watch -p ag-grid-community,ag-grid-enterprise,ag-grid-charts-enterprise -- {projectRoot}/dev.sh \\${NX_PROJECT_NAME} ; done",
          "while (test \"${BUILD_PACKAGES}\" != \"0\" && test \"${BUILD_FWS}\" != \"0\") ; do nx watch -p ag-grid-angular,ag-grid-react,ag-grid-vue3 -- nx run \\${NX_PROJECT_NAME}:build ; done",
          "while true ; do nx watch -p ag-grid-docs-* -- nx run \\${NX_PROJECT_NAME}:generate; done",
          "while true ; do nx watch -p ag-grid-docs -- {projectRoot}/dev.sh \\${NX_PROJECT_NAME}; done",
          "nx run ag-grid-docs:dev"
        ]
      },
      "configurations": {
        "windows": {
          "commands": [
            {
              "command": "nx run ag-charts-website:dev --configuration watch"
            }
          ]
        }
      }
    },
    "format-check": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "nx format:check --all"
          }
        ]
      }
    },
    "blt": {
      "executor": "nx:run-commands",
      "dependsOn": ["build", "lint", "format-check"],
      "options": {
        "commands": ["nx run-many -t test --parallel 1"]
      }
    },
    "clean": {
      "command": "rimraf dist/ 'community-modules/*/dist/' 'community-modules/styles/*.css' 'enterprise-modules/*/dist/' 'packages/*/dist/' 'documentation/*/dist/' 'community-modules/locale/umd/'"
    },
    "generate-examples": {
      "executor": "nx:noop",
      "dependsOn": ["^generate-example"],
      "inputs": [
        {
          "externalDependencies": ["npm:typescript"]
        }
      ],
      "outputs": [],
      "batch": true,
      "cache": true,
      "configurations": {
        "staging": {},
        "production": {}
      }
    },
    "generate-one-example": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx run ag-grid-docs-src_content_docs_{args.page}__examples_{args.example}_main.ts:generate-example --skip-nx-cache"
        ]
      }
    },
    "generate-doc-references": {
      "executor": "nx:noop",
      "dependsOn": ["^generate-doc-references"],
      "inputs": [
        {
          "externalDependencies": ["npm:typescript"]
        }
      ],
      "outputs": [],
      "cache": false,
      "configurations": {
        "staging": {},
        "production": {}
      }
    }
  },
  "implicitDependencies": [
    "community-modules/core",
    "community-modules/client-side-row-model",
    "community-modules/styles",
    "community-modules/locale",
    "community-modules/csv-export",
    "community-modules/infinite-row-model",
    "community-modules/theming",
    "community-modules/angular",
    "community-modules/react",
    "community-modules/vue3",
    "enterprise-modules/core",
    "enterprise-modules/advanced-filter",
    "enterprise-modules/charts",
    "enterprise-modules/charts-enterprise",
    "enterprise-modules/clipboard",
    "enterprise-modules/column-tool-panel",
    "enterprise-modules/excel-export",
    "enterprise-modules/filter-tool-panel",
    "enterprise-modules/master-detail",
    "enterprise-modules/menu",
    "enterprise-modules/multi-filter",
    "enterprise-modules/range-selection",
    "enterprise-modules/rich-select",
    "enterprise-modules/row-grouping",
    "enterprise-modules/server-side-row-model",
    "enterprise-modules/set-filter",
    "enterprise-modules/side-bar",
    "enterprise-modules/sparklines",
    "enterprise-modules/viewport-row-model",
    "enterprise-modules/status-bar",
    "packages/ag-grid-community",
    "packages/ag-grid-enterprise",
    "packages/ag-grid-charts-enterprise",
    "packages/ag-grid-react",
    "packages/ag-grid-angular",
    "packages/ag-grid-vue3",
    "documentation/ag-grid-docs",
    "external/ag-website-shared",
    "external/ag-shared",
    "testing/behavioural",
    "ag-grid-generate-example-files"
  ],
  "tags": []
}
