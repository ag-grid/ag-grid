{
    "_config_": {
        "codeSrc": "row-node.AUTO.json"
    },
    "display": {
        "meta": {
            "displayName": "Display"
        },
        "rowIndex": {},
        "rowTop": {},
        "displayed": {},
        "isHovered": {}
    },
    "expand": {
        "meta": {
            "displayName": "Expand / Collapse"
        },
        "expanded": {},
        "isExpandable": {},
        "setExpanded": {
            "description": "Set the expanded state of this rowNode. <ul class='content'><li>`expanded` - `true` to expand, `false` to collapse</li><li>`sourceEvent` - Optional event that will be passed to the `rowGroupOpened` event.</li><li>`forceSync` - By default rows are expanded asynchronously for best performance. Set to `true` if you need to interact with the expanded row immediately after this function.</li></ul>"
        }
    },
    "events": {
        "meta": {
            "displayName": "Events"
        },
        "addEventListener": {},
        "removeEventListener": {}
    },
    "height": {
        "meta": {
            "displayName": "Height"
        },
        "rowHeight": {},
        "setRowHeight": {}
    },
    "filter": {
        "meta": {
            "displayName": "Quick Filter"
        },
        "quickFilterAggregateText": {},
        "resetQuickFilterAggregateText": {}
    },
    "serverSide": {
        "meta": {
            "displayName": "Server Side Row Model"
        },
        "stub": {},
        "failedLoad": {},
        "getRoute": {
            "more": {
                "name": "Server-Side Model: Open by Default",
                "url": "./server-side-model-grouping/#open-by-default"
            }
        }
    },
    "masterDetail": {
        "meta": {
            "displayName": "Master Detail"
        },
        "master": {},
        "detail": {}
    },
    "pinned": {
        "meta": {
            "displayName": "Pinned Rows"
        },
        "rowPinned": {},
        "isRowPinned": {}
    },
    "data": {
        "meta": {
            "displayName": "Data"
        },
        "id": {},
        "sourceRowIndex": {},
        "data": {},
        "updateData": {},
        "setData": {
            "more": {
                "name": "Client-Side Single Row Update",
                "url": "./data-update-single-row-cell/"
            }
        },
        "setDataValue": {
            "more": {
                "name": "Client-Side Single Cell Update",
                "url": "./data-update-single-row-cell/"
            }
        }
    },
    "selection": {
        "meta": {
            "displayName": "Selection"
        },
        "selectable": {},
        "setSelected": {
            "description": "Select (or deselect) the node. <ul class='content'><li>`newValue` - `true` for selection, `false` for deselection.</li><li>`clearSelection` - If selecting, then passing `true` will select the node exclusively (i.e. NOT do multi select). If doing deselection, `clearSelection` has no impact.</li>"
        },
        "isSelected": {}
    },
    "groupNodeAttributes": {
        "meta": {
            "displayName": "Grouping"
        },
        "group": {},
        "groupData": {},
        "aggData": {},
        "key": {},
        "field": {},
        "rowGroupColumn": {},
        "rowGroupIndex": {},
        "footer": {},
        "parent": {},
        "firstChild": {},
        "lastChild": {},
        "childIndex": {},
        "level": {},
        "uiLevel": {},
        "allLeafChildren": {},
        "childrenAfterGroup": {},
        "childrenAfterFilter": {},
        "childrenAfterSort": {},
        "allChildrenCount": {},
        "leafGroup": {},
        "sibling": {},
        "depthFirstSearch": {}
    }
}
