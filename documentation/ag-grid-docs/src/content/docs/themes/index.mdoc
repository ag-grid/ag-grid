---
title: "Built-in themes"
---

Built-in themes provide a starting point for theming your application.

Themes are objects imported from the `ag-grid-community` package and provided to grid instances using the `theme` grid option.

```js
import { themeBalham } from 'ag-grid-community';
```

## Built-in Themes

 * Quartz - Our default theme, with high contrast and generous padding.
 * Balham - A more traditional theme modelled after a spreadsheet application.
 * Alpine - The default theme before Quartz. We recommend quartz for new projects; this theme is intended to ease migration to the Theming API for
 applications already using Alpine.

{% gridExampleRunner title="Built-in themes" name="built-in-themes" /%}

## Changing the Default Theme

```js
import { themeBalham } from 'ag-grid-community';

{% if isFramework("javascript") %}
const gridOptions = {
    theme: themeBalham,
    ...
}
{% /if %}
{% if isFramework("react") %}
<AgGridReact
    theme={themeBalham}
    ...
/>
{% /if %}
{% if isFramework("vue") %}
// in template
<ag-grid-vue
    :theme="theme"
    ...
></ag-grid-vue>

// in component setup hook
setup() {
    return {
        theme: themeBalham,
    };
}
{% /if %}
{% if isFramework("angular") %}
// in template
<ag-grid-angular
    [theme]="theme"
/>

// in component class
public theme = themeBalham;
{% /if %}
```

This is a minimal example of importing a theme from `ag-grid-community` and applying it to a grid instance.

{% gridExampleRunner title="Basic Theming API Example" name="basic" /%}

## Customising Built-in Themes

Themes are simply preset configurations of parts and parameters. After choosing a theme as a starting point, you can:

1. Choose a different [Color Scheme](./theming-colors/#color-schemes) if required.
2. Use [Theme Parameters](./theming-parameters/) to customise borders, compactness, fonts and more.
3. Use [Theme Parts](./theming-parts/) mix and match elements from different themes, for example the icons from Quartz with the text inputs from Material.
4. [Write your own CSS](./theming-css/) for unlimited control over grid appearance.